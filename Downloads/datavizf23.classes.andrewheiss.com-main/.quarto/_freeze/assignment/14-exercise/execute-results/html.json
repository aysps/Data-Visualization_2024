{
  "hash": "3b4fb869086f89361eb594092af0b2a6",
  "result": {
    "markdown": "---\ntitle: \"Enhancing graphics\"\ndate: \"2023-12-04\"\n---\n\n\n\n\nFor this exercise, you'll export a PDF and/or an SVG from R, open it in a [vector edting program](/resource/graphics-editors.qmd), add annotations and make minor edits, and then export a final polished version.\n\nI have given you 100% of the R code you need to use. All you have to do is run it. I've also given you all the text and pieces of the final plot—[see those below](#task-2-details-hot-dog-eating-contest-winners).\n\nThis example page will be incredibly useful for you:\n\n- [{{< fa laptop-code >}} Enhancing graphics](/example/14-example.qmd)\n\nYou'll be doing all your R work in R Markdown. You can download a zipped file of a pre-made project here:\n\n- [{{< fa file-archive >}} `14-exercise.zip`](/projects/14-exercise.zip)\n\nYou don't need to make your plots super fancy (except for these annotations), but you should play around with the plots and try to go beyond the basics—experiment with changing colors or modifying themes and theme elements.\n\nAnd as always, if you're struggling, *please* talk to me and use Slack and talk to your classmates! Don't suffer in silence!\n\n\n## Instructions\n\n1. If you're using R on your own computer, download this file, [*unzip it*](/resource/unzipping.qmd), and double click on the file named `exercise-14.Rproj`: [{{< fa file-archive >}} `14-exercise.zip`](/projects/14-exercise.zip)\n\n   You'll need to make sure you have these packages installed on your computer: `tidyverse`, `svglite`. If you try to load one of those packages with `library(tidyverse)` or `library(svglite)`, etc., and R gives an error that the package is missing, use the \"Packages\" panel in RStudio to install it.\n\n   (Alternatively, you can open the project named \"Exercise 14\" on Posit.cloud and complete the assignment in your browser without needing to install anything. [This link should take you to the project](https://posit.cloud/spaces/401677/content/6337020)—if it doesn't, log in and look for the project named \"Exercise 14\".)\n\n2. Rename the R Markdown file named `your-name_exercise-14.Rmd` to something that matches your name and open it in RStudio.\n\n3. Complete the tasks given in the R Markdown file. \n\n   Fill out code in the empty chunks provided (you can definitely copy, paste, and adapt from other code in the document or [the example page](/example/14-example.qmd)—don't try to write everything from scratch!).\n\n   You'll need to insert your own code chunks. Rather than typing them by hand (that's tedious!), use the \"Insert\" button at the top of the editing window, or press  <kbd>⌥</kbd> + <kbd>⌘</kbd> + <kbd>I</kbd> on macOS, or <kbd>ctrl</kbd> + <kbd>alt</kbd> + <kbd>I</kbd> on Windows.\n\n\n   ::: {.cell layout-align=\"center\"}\n   ::: {.cell-output-display}\n   ![](../../../../../files/img/assignments/insert-chunk-button.png){fig-align='center' width=19%}\n   :::\n   :::\n\n\n   Remember that you can run an entire chunk by clicking on the green play arrow in the top right corner of the chunk. You can also run lines of code line-by-line if you place your cursor on some R code and press <kbd>⌘</kbd> + <kbd>enter</kbd> (for macOS users) or <kbd>ctrl</kbd> + <kbd>enter</kbd> (for Windows users).\n\n   Make sure you run each chunk sequentially. If you run a chunk in the middle of the document without running previous ones, it might not work, since previous chunks might do things that later chunks depend on.\n\n1. When you're all done, click on the \"Knit\" button at the top of the editing window and create a Word or PDF version (if you've [installed **tinytex**](/resource/install.qmd#install-tinytex)) of your document. Upload that file to iCollege. **Do not upload a knitted HTML file** (they don't work on iCollege).\n\n\n   ::: {.cell layout-align=\"center\"}\n   ::: {.cell-output-display}\n   ![](../../../../../files/img/assignments/knit-button.png){fig-align='center' width=30%}\n   :::\n   :::\n\n\n\n## Task 2 details: Hot dog eating contest winners\n\nRecreate this plot (or something like it):\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](../../../../../files/img/assignments/hot-dogs.gif){fig-align='center' width=100%}\n:::\n:::\n\n\nCreate and save a basic bar chart of hot dog eating contest winners using the code provided. Open the resulting file in a [vector editing program](/resource/graphics-editors.qmd).\n\nBe sure that you save your file **with a different name**. You don't want to accidentally overwrite all your enhancements and updates when you knit this document. That would be so sad.\n\nYou don't have data prior to 1980, so **don't worry about recreating that half of the graph**. You don't have to put all the text boxes in exactly the same locations—you can even do a completely different design and add different annotations if you want. \n\nThe point of this assignment is to help you get familiar with vector editing software, so don't stress out about R issues or graphic design issues (though try to follow CRAP where possible).\n\n::: {.callout-note}\n### Plot text\n\nTo save you some typing, here's all the text from the original plot. Copy and paste it into your enhanced version (or change the text if you want—again, do whatever you want):\n\n- Winners from Nathan’s Hot Dog Eating Contest\n- It’s that time of year again. Since 1916, the annual eating competition has grown substantially attracting competitors from around the world\n- Frank Dellarosa eats 21 and a half HDBs over 12 minutes, breaking the previous record of 19 and a half\n- Through 2001-2005, Takeru Kobayashi wins by no less than 12 HDBs. In 2006 he only wins by 1.75. After winning 6 years in a row and setting the world record 4 times, Kobayashi places second in 2007.\n- For the first time since 1999, an American reclaims the title when Joey Chestnut consumes 66 HDBs, a new world record. Chestnut repeats in 2008.\n- Source: Wikipedia and Nathan’s Famous\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}